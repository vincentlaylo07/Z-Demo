<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAWgAAAF3CAIAAAAHB0bMAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAC45JREFUeF7t3eF2E8cdxuFecFNI2nsKjknuAjsmbdPkEpLAtwCX0DGbDOPZlaw3
        rKRZ+Tnn+WDP/BcOXvTzaiXD3z68/RkgIhxATDiAmHAAMeEAYsIBxIQDiAkHEBMOICYcQEw4gJhwADHh
        AGLCAcSEA4gJBxATDiAmHEBMOICYcAAx4QBiwgHEhAOICQcQEw4gJhxATDiAmHAAMeEAYsIBxIQDiAkH
        EBMOICYcQEw4gJhwADHhAGLCAcSEA4gJBxATDiAmHEBMOIDYauH4/pt/VN0WcGGEA4gJBxATDiAmHEBM
        OICYcAAx4QBiwgHEhAOICQcQEw4gJhxATDiAmHAAMeEAYsIBxIQDiAkHEBMOICYcQEw4gJhwADHhAGLC
        AcSEA4gJBxATDiAmHEBMOICYcAAx4QBiwgHEhAOICQcQEw4gJhxATDiAmHAAMeEAYsIBxIQDiAkHEBMO
        ICYcQEw4gJhwADHhAGLCAcSEA4gJBxATDiAmHEBMOICYcAAx4QBiwgHEhAOICQcQEw4gJhxATDiAmHAA
        MeEAYsIBxIQDiAkHEBMOICYcQEw4gJhwADHhAGLCAcSEA4gJBxATDiAmHEBMOICYcAAx4QBiwgHEhAOI
        CQcQEw4gJhxATDiAmHAAMeEAYsIBxIQDiAkHEBMOICYcQEw4gJhwADHhAGLCAcSEA4gJBxATDiAmHEBM
        OICYcAAx4QBiwgHEhAOICQcQO3o4dq0D2yUcQEw4gJhwADHhAGLCAcSEA4gJBxATDiAmHEBMOICYcAAx
        4QBiwgHEhAOICQcQEw4gJhxATDiAmHAAMeEAYsIBxIQDiAkHEBMOICYcQEw4gJhwADHhAGLCAcSEA4gJ
        BxATDiAmHEBMOICYcAAx4QBiwgHEhAOICQcQEw4gJhxATDiAmHAAMeEAYsIBxIQDiAkHEBMOICYcQEw4
        gNhJw9FtARt16nAU7S6wRUcPR7c16QaAbTlFOIp2d9INABtyonAU7cCkGwC24nThKNqZSTcAbMJJw1G0
        Y5NuABjfqcNRtJOTbgAY3BnCUbTDk24AGNl5wlG085NuABjWmuG4vfoiqkAdrroBYExHueKYdAOLukOK
        bgAY0GrhKLoEFN3Aou6QohsARrNmOIouAUU3sKg7pOgGgKGsHI6iffzfXh1agfaoSTcAjGPNexztx526
        tcdfOAQ4i5VvjnafturWHuk8cBYrh6N9wNeVqm7tEg0D57JmOKY7Gu1jfvq0VbcWHT4JnNGq4WjeA9au
        V9Nu3Zprh7stYBzrP1Wp5ls3L/7ebXXq5J4Z4OxWvuJoH/lFu9upW61HB4ARrHuP49PPqlTtQKduVft3
        gUEc8alK1c7UG6jdVh3YtQWM4+jh6N482qz3t1Hb3W4dGMq6T1UWbnNU7WRncasuAqNZLRxFebQv3uYo
        uhdi28X5ercIjGbNcBTtI39RO1kvT9rFqi4Co1k5HEX74F80H1s8ti4Co1nzHkf78c2O5yyTaab9tB44
        XwRGs2Y42kd7ffzv8errLxbvfUzqIjCalcPRPuDLx/vvlbo5Chu1fjjax3y7OPfq6/5HV+pWuwiM5ijh
        aB/23fqixeG6CIzmWOEo9mx1FifrIjCaI4aj2L9bLY7VRWA0xw1H8ehAsThTF4HRHD0cxaMziwN1ERjN
        KcJRdGPdy7TdbrcIjGbNcNy8WH7XxqSd7H6Itt2aLwKjOdEVx2TX8OJ6XQRGs1o4ivZhv8vi8P5FYDRr
        hqNoH/m7zCcXD6+LwGhWDkfRPvh3mcb8rAps1Jr3ONqPI/VAYBNWC8fd9fO762f10y4NnV0vxwKbsOYV
        RwlHW4HahUfVQ4BNWDMcxfQGjW7xUXUe2ISVw1HcXsXXHXUY2IT1w1Hs+k+YdqmTwCYcJRzFIdcd85dj
        gU04VjiqRweKOgNswtHDUTw6UweATTh6OA55naXuAptwiiuOyZ7JugVswonCsf9eaV0HNmG1cBRdDhYt
        DtdFYBPWDEfR5mDupnl/R7teDwc2YeVwFG0R5upzlnaxPRwY35r3ONqPI/VAYBNWvjnafbrLrn+sGNiE
        lcPRVqCuPKoeAmzC+uFoQ9Au7lHngU04SjjaFnTri+owsAlHCUf6T4HVSWATjnXF8X3SjjoGbMLRwpFc
        d9QZYBOOGI7q0Zk6AGzCKcJR7B+ru8AmHD0ct1fPHn3OUreATThBOD7+w6J721HXgU1YLRxFl4Oq/X/b
        FofrIrAJa4ajaHPQ6Z6ztFv1cGATVg5H0RZhl26sPRwY3/rhKNooHKI7HBjcUcJRdGmY3Hy82XHz4nm7
        WHTHAoM7VjiKrg6T6Ubpq68ftKM7EBjcEcNRtHWo2hdZJt1RwOCOG46ia8Si7hBgcEcPR9FlYq6bBwZ3
        inAUXSk63TAwuBOFo+hi0eomgcGdLhxF14uqGwMGd9JwFF0yJt0MMLhTh6PoqlF0A8DgzhCOQjhg084T
        jkI4YLuEA4gJBxATDiAmHEBMOICYcAAx4QBiwgHEhAOICQcQEw4gJhxATDiAmHAAMeEAYsIBxIQDiAkH
        EBMOICYcQEw4gJhwADHhAGLCAcSEA4gJBxAbNBzv3/xv1xZwduOG4/W3X0675eNuFzivcZ+qvPv1P/sH
        gHMZ+h7H+zc/PjoDnN4Q4Xj97b+63er3X/5dx7otLlI93Wvpfn1WcbZwtM9Eitcvv+wGqt9/+aGOdVtc
        mHqiV9T9FqzibOF4/+anD29/ak/w3e521BdZim6Li+EUb8jZwjHprju+/+ZZN1C533HZnNxtOXM4ynXH
        +98+FeHe9fMP9xcj/WThdZZL5bRuzpnDMenacVfaMZuZvPvVvdJL44Ru0RjhKJcYbx7c79j3nKWpTLfF
        5kSnsg7zqLvrnY+gVQwRjkl7NTH58Hb5OUvRzPRbbEV0Euswh3j93c63OKxioHAU5dKj+/N/fPGlH5vU
        mW6dTYhOXx3mUE/nimPy7tf/dl+CPT+rUme6dQYXnbg63M63i3MHjoWezVaGVr8IxzBcOIr+dRbtuCDt
        RWW3tagOt/Pt4tyBY8Vhk5++ddd23F61A/f23NG/SCOGo2jf8TVxv+MCpG/kq8PtfLs4d+BYcchkm4O7
        l191u43jPi8Y0KDhKNwrvTDTtcbd9f037W5rUT2n7Xy7OHfgWNFO3lz/s91qfMpBKchst3py1SjGDUcx
        e1+p5yyx+mUZxJ4fLGi1hywuzh04VrSTe64j6tjd9R//NMzcgX+cyzN0OIr5e8O0I1K/JiM48EZAe8ji
        4tyBY8XDyV33O5trjZd7rjVO8Tet+x0/R/crf47Rw1G8+83rLE9IPYPtSWwX5w4cK9rJ22+ez+9xTurY
        nmcoB0bw83W/7+fofuXPsYFwFPPXWcqzmG6mqjPdOuOr5649fe3i3IFjxcPJ5WuNNgd7qvE072u0thGO
        Yv46i3ZcmHrW2hPXLs4dOFY8nHy2eK3Rvk377uXO+xqqUWwmHPfe/NR9EyhXIv3Mn+pMt86Y6vlqT1m7
        OHfgWNFN3l59Ubeqh9caf1yP3FzNL0xU496mwvHxuqO9Db732wKbVM91t945cKx9nJdPb6+/evVioRpF
        HavVWHDk93FvyMbCUczvlXIx6lnu1jsHjrUXEeXT2/tnKEvVaHJQQtPv/unYP2+6LdsLx0f9z8JxAer5
        7dY7B449zEGpxpc77ms8//2XH/4Y+/Na4/bhzD3VeGij4bjXn1q27MDTeuBYcchkvSR5/9uP7mtENhyO
        w9W/Ad068Nc8iXAU2sFeO1+eY9FTCUehHbCWJxSOQjtgFU8rHEVtxxPXfVkg8uTCUXQPoaep+5pA5CmG
        A/hMwgHEhAOICQcQEw4gJhxATDiAmHAAMeEAYsIBxIQDiAkHEBMOICYcQEw4gJhwADHhAGLCAcSEA4gJ
        BxATDiAmHEBMOICYcAAx4QBiwgHEhAOICQcQevvz/wGjWGYs0yXa9wAAAABJRU5ErkJggg==
</value>
  </data>
</root>